{"version":3,"sources":["components/common/NoFound/index.js","components/Dashboard/userDetails.js","components/Dashboard/setDetails.js","components/Dashboard/folderDetails.js","components/Dashboard/barChart.js","components/Dashboard/doughnutChart.js","views/Dashboard/Dashboard.js"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","reactstrap__WEBPACK_IMPORTED_MODULE_1__","NoDataFound","props","a","createElement","className","noResult","Fragment","message","showAddButton","undefined","onClick","onAddClick","UsersDetails","usersReducer","this","totalUsers","users","react_default","Card","CardHeader","CardBody","Table","responsive","borderless","width","style","maxWidth","Link","to","concat","AppRoutes","USERS","url","filter","user","status","length","isLoading","Loader","Component","withRouter","SetsDetails","setsReducer","totalSets","sets","SETS","set","FoldersDetails","foldersReducer","totalFolders","folders","FOLDERS","folder","BarChart","_this","Object","classCallCheck","_super","call","onDatesChange","e","registeredUserNo","startDate","state","Date","endDate","date1","date2","diffTime","Math","abs","getTime","diffDays","ceil","setState","dayDiff","itr","moment","twix","iterate","Dates","hasNext","push","day","next","format","count","data","subtract","focusedInput","openDatePicker","DashboardReducer","_ref","userData","sortedData","sort","b","construct","toConsumableArray","split","reverse","temp","x","y","skip","parseInt","Count","Data","m","labels","map","datasets","label","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","_this2","isLoadingUser","react_dates","startDateId","endDateId","_ref2","onFocusChange","isOutsideRange","numberOfMonths","hideKeyboardShortcutsPanel","react_chartjs_2_es","height","options","maintainAspectRatio","layout","padding","left","right","top","bottom","scales","xAxes","barThickness","minBarLength","ticks","fontSize","fontStyle","interval","yAxes","beginAtZero","min","stepSize","stacked","NoFound","DoughnutChart","onDatesChangeRoleTypeUser","getRoleTypeUserNo","userRoleTypeData","roleType","totalCount","isLoadingUserRoleType","Dashboard","getRoleTypeUserNoReq","getUsersList","page","limit","getAllSetRequest","getAllFolderRequest","_this$props","Helmet","Row","Col","xs","sm","lg","md","userDetails","setDetails","folderDetails","barChart","doughnutChart","connect","dispatch","registeredUserNoRequest"],"mappings":"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","file":"static/js/16.118dcd47.chunk.js","sourcesContent":["import React from \"react\";\nimport {\n  Button\n} from \"reactstrap\";\n\nconst NoDataFound = (props) => {\n  return (\n    <div className={\"no-data-found\"}>\n      {!props.noResult ?\n        <div>\n          <div><i className={\"icons cui-ban\"} /></div>\n          <h5>{props.message || \"No records available\"}</h5>\n          {props.showAddButton || typeof props.showAddButton === undefined ? <p>Please click below button to add new.</p> : null}\n          <div className={\"pt-3\"}>\n            {\n              props.showAddButton || typeof props.showAddButton === undefined ?\n\n                <Button className=\"btn-theme-line\" onClick={props.onAddClick}><i className=\"fa fa-plus\" /> Add New</Button>\n                : null\n            }\n          </div>\n        </div>\n        :\n        <>\n          <div><i className={\"icons icon-magnifier\"} /></div>\n          <h5>{props.message || \"No records available\"}</h5>\n          <ul className={\"no-found-list\"}>\n            <li>Try to simplify your search</li>\n            <li>Use different keywords</li>\n            <li>Make sure words are spelled correctly</li>\n          </ul>\n        </>\n      }\n    </div>\n  )\n}\n\nexport default NoDataFound;","import React, { Component } from \"react\";\nimport { withRouter, Link } from \"react-router-dom\";\nimport { Card, CardBody, CardHeader, Table } from \"reactstrap\";\nimport Loader from \"../../containers/Loader/Loader\";\nimport { AppRoutes } from \"../../Config/AppRoutes\";\n\nclass UsersDetails extends Component {\n   render() {\n      const { usersReducer } = this.props;\n      const { totalUsers, users } = usersReducer;\n      return (\n         <Card >\n            <CardHeader>\n               <div className=\"font-weight-bold\">\n                  Users Details\n               </div>\n            </CardHeader>\n            <CardBody>\n               <Table responsive borderless>\n                  {usersReducer && users?\n                     <tbody>\n                        <tr>\n                           <td width=\"250px\">Total Active Users</td>\n                           <td style={{ maxWidth: \"200px\" }} className={\"font-weight-bold\"}>\n                              <span className=\"mr-2\">:</span>\n                              <Link to={`${AppRoutes.USERS.url}?page=1&status=1`}>\n                                 {users ? users.filter(user => user.status === true).length : 0}\n                              </Link>\n                           </td>\n                        </tr>\n                        <tr>\n                           <td width=\"250px\">Total Inactive Users</td>\n                           <td style={{ maxWidth: \"200px\" }} className={\"font-weight-bold\"}>\n                              <span className=\"mr-2\">:</span>\n                              <Link to={`${AppRoutes.USERS.url}?page=1&status=0`}>\n                                 {users ? users.filter(user => user.status === false).length : 0}\n                              </Link>\n                           </td>\n                        </tr>\n                        <tr>\n                           <td width=\"250px\">Total Users</td>\n                           <td style={{ maxWidth: \"200px\" }} className={\"font-weight-bold\"}>\n                              <span className=\"mr-2\">:</span>\n                              <Link to={`${AppRoutes.USERS.url}`}>\n                                 {totalUsers ? totalUsers : 0}\n                              </Link>\n                           </td>\n                        </tr>\n                     </tbody>\n                     : null}\n               </Table>\n               {usersReducer.isLoading ? <Loader /> : null}\n            </CardBody>\n         </Card>\n      )\n   }\n}\nexport default withRouter(UsersDetails);","import React, { Component } from \"react\";\nimport { withRouter, Link } from \"react-router-dom\";\nimport { Card, CardBody, CardHeader, Table } from \"reactstrap\";\nimport Loader from \"../../containers/Loader/Loader\";\nimport { AppRoutes } from \"../../Config/AppRoutes\";\n\nclass SetsDetails extends Component {\n   render() {\n      const { setsReducer } = this.props;\n      const { totalSets, sets } = setsReducer;\n      return (\n         <Card >\n            <CardHeader>\n               <div className=\"font-weight-bold\">\n                  Sets Details\n               </div>\n            </CardHeader>\n            <CardBody>\n               <Table responsive borderless>\n                  {setsReducer && sets ?\n                     <tbody>\n                        <tr>\n                           <td width=\"250px\">Total Active Sets</td>\n                           <td style={{ maxWidth: \"200px\" }} className={\"font-weight-bold\"}>\n                              <span className=\"mr-2\">:</span>\n                              <Link to={`${AppRoutes.SETS.url}?page=1&status=1`}>\n                                 {sets ? sets.filter(set => set.status === true).length : 0}\n                              </Link>\n                           </td>\n                        </tr>\n                        <tr>\n                           <td width=\"250px\">Total Inactive Sets</td>\n                           <td style={{ maxWidth: \"200px\" }} className={\"font-weight-bold\"}>\n                              <span className=\"mr-2\">:</span>\n                              <Link to={`${AppRoutes.SETS.url}?page=1&status=0`}>\n                                 {sets ? sets.filter(set => set.status === false).length : 0}\n                              </Link>\n                           </td>\n                        </tr>\n                        <tr>\n                           <td width=\"250px\">Total Sets</td>\n                           <td style={{ maxWidth: \"200px\" }} className={\"font-weight-bold\"}>\n                              <span className=\"mr-2\">:</span>\n                              <Link to={`${AppRoutes.SETS.url}`}>\n                                 {totalSets ? totalSets : 0}\n                              </Link>\n                           </td>\n                        </tr>\n                     </tbody>\n                     : null}\n               </Table>\n               {setsReducer.isLoading ? <Loader /> : null}\n            </CardBody>\n         </Card>\n      )\n   }\n}\nexport default withRouter(SetsDetails);","import React, { Component } from \"react\";\nimport { withRouter, Link } from \"react-router-dom\";\nimport { Card, CardBody, CardHeader, Table } from \"reactstrap\";\nimport Loader from \"../../containers/Loader/Loader\";\nimport { AppRoutes } from \"../../Config/AppRoutes\";\n\nclass FoldersDetails extends Component {\n   render() {\n      const { foldersReducer } = this.props;\n      const { totalFolders, folders } = foldersReducer;\n      return (\n         <Card >\n            <CardHeader>\n               <div className=\"font-weight-bold\">\n                  Folders Details\n               </div>\n            </CardHeader>\n            <CardBody>\n               <Table responsive borderless>\n                  {foldersReducer && folders ?\n                     <tbody>\n                        <tr>\n                           <td width=\"250px\">Total Active Folders</td>\n                           <td style={{ maxWidth: \"200px\" }} className={\"font-weight-bold\"}>\n                              <span className=\"mr-2\">:</span>\n                              <Link to={`${AppRoutes.FOLDERS.url}?page=1&status=1`}>\n                                 {folders ? folders.filter(folder => folder.status === true).length : 0}\n                              </Link>\n                           </td>\n                        </tr>\n                        <tr>\n                           <td width=\"250px\">Total Inactive Folders</td>\n                           <td style={{ maxWidth: \"200px\" }} className={\"font-weight-bold\"}>\n                              <span className=\"mr-2\">:</span>\n                              <Link to={`${AppRoutes.FOLDERS.url}?page=1&status=0`}>\n                                 {folders ? folders.filter(folder => folder.status === false).length : 0}\n                              </Link>\n                           </td>\n                        </tr>\n                        <tr>\n                           <td width=\"250px\">Total Folders</td>\n                           <td style={{ maxWidth: \"200px\" }} className={\"font-weight-bold\"}>\n                              <span className=\"mr-2\">:</span>\n                              <Link to={`${AppRoutes.FOLDERS.url}`}>\n                                 {totalFolders ? totalFolders : 0}\n                              </Link>\n                           </td>\n                        </tr>\n                     </tbody>\n                     : null}\n               </Table>\n               {foldersReducer.isLoading ? <Loader /> : null}\n            </CardBody>\n         </Card>\n      )\n   }\n}\nexport default withRouter(FoldersDetails);","import React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { Card, CardBody, CardHeader } from \"reactstrap\";\nimport { Bar } from 'react-chartjs-2';\nimport moment from 'moment';\nimport 'twix';\nimport 'react-dates/initialize';\nimport { DateRangePicker } from 'react-dates';\nimport '../../../node_modules/react-dates/lib/css/_datepicker.css';\nimport Loader from \"../../containers/Loader/Loader\";\nimport NoDataFound from \"../../components/common/NoFound\"\n\nclass BarChart extends Component {\n   constructor(props) {\n      super(props);\n      this.state = {\n         data: {},\n         startDate: moment().subtract(30, \"d\"),\n         endDate: moment(),\n         focusedInput: null,\n         dayDiff: 0,\n         openDatePicker: false,\n         Dates: []\n      };\n   }\n   componentDidMount() {\n      this.onDatesChange();\n   };\n   componentDidUpdate({ DashboardReducer }) {\n      if (this.props.DashboardReducer && this.props.DashboardReducer !== DashboardReducer) {\n         if (this.props.DashboardReducer && this.props.DashboardReducer.userData && this.props.DashboardReducer.userData !== DashboardReducer.userData && this.props.DashboardReducer.userData.length) {\n            let sortedData = this.props.DashboardReducer.userData.sort((a, b) => new Date(...a.day.split('/').reverse()) - new Date(...b.day.split('/').reverse()));\n            let data = [];\n            let temp = {};\n            for (let x = 0; x < this.state.Dates.length; x++) {\n               for (let y = 0; y < sortedData.length; y++) {\n                  if (moment(this.state.Dates[x].day).format('DD-MM-YYYY') === moment(sortedData[y].day).format('DD-MM-YYYY')) {\n                     temp = sortedData[y]\n                  }\n               }\n               temp && temp.day && temp.count ? data.push(temp) : data.push(this.state.Dates[x]);\n               temp = {};\n            }\n            let skip = parseInt(this.state.Dates.length / 7) >= 1 ? parseInt(this.state.Dates.length / 7) === 1 ? 2 : parseInt(this.state.Dates.length / 7) : 1;\n            let Count = 0;\n            let Data = [];\n            for (let m = 0; m < data.length; m = m + skip) {\n               //let p = (m + skip) <= data.length ? m + skip : 0;\n               for (let n = m; n < (m + skip); n++) {\n                  Count = Count + (data[n] && data[n].count ? data[n].count : 0);\n               }\n               // if ((m + skip) <= data.length) {\n               Data.push({\n                  day: data[m].day,\n                  count: Count\n               });\n               // }\n               Count = 0;\n            }\n            this.setState({\n               data: {\n                  labels: this.props.DashboardReducer.userData && sortedData && data && Data ? Data.map((data) => { return moment(data.day).format('DD-MM-YYYY') }) : null,\n                  datasets: [\n                     {\n                        label: 'No. of Registered User',\n                        backgroundColor: '#000',\n                        borderColor: '#000',\n                        borderWidth: 1,\n                        hoverBackgroundColor: '#000',\n                        hoverBorderColor: '#000',\n                        data: this.props.DashboardReducer.userData && sortedData && data && Data ? Data.map((data) => {\n                           return data.count\n                        }) : null\n                     }\n                  ]\n               }\n            });\n         }\n      };\n   };\n   onDatesChange = (e) => {\n      this.props.registeredUserNo({\n         startDate: this.state.startDate ?\n            new Date(this.state.startDate) : new Date(),\n         endDate: this.state.endDate ?\n            new Date(this.state.endDate) : new Date()\n      });\n      const date1 = this.state.startDate ? new Date(this.state.startDate) : new Date();\n      const date2 = this.state.endDate ? new Date(this.state.endDate) : new Date();\n      const diffTime = Math.abs(date2.getTime() - date1.getTime());\n      const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n      this.setState({ dayDiff: diffDays ? diffDays : 0 });\n      var itr = moment.twix(new Date(this.state.startDate), new Date(this.state.endDate)).iterate(\"days\");\n      var Dates = [];\n      while (itr.hasNext()) {\n         Dates.push({\n            day: itr.next().format(),\n            count: 0\n         })\n      }\n      this.setState({ Dates });\n   };\n   render() {\n      const { data } = this.state;\n      const { DashboardReducer } = this.props;\n      const { isLoadingUser } = DashboardReducer;\n      return (\n         <Card>\n            <CardHeader>\n               <div className={\"d-flex justify-content-between w-100\"}>\n                  <div className=\"mt-3 font-weight-bold\">\n                     Registered User\n                  </div>\n                  <div>\n                     <DateRangePicker\n                        startDate={this.state.startDate} // momentPropTypes.momentObj or null,\n                        startDateId=\"your_unique_start_date_id\" // PropTypes.string.isRequired,\n                        endDate={this.state.endDate} // momentPropTypes.momentObj or null,\n                        endDateId=\"your_unique_end_date_id\" // PropTypes.string.isRequired,\n                        onDatesChange={({ startDate, endDate }) => this.setState({ startDate, endDate }, () => {\n                           this.onDatesChange()\n                        })} // PropTypes.func.isRequired,\n                        focusedInput={this.state.focusedInput} // PropTypes.oneOf([START_DATE, END_DATE]) or null,\n                        onFocusChange={focusedInput => this.setState({ focusedInput })} // PropTypes.func.isRequired,\n                        isOutsideRange={() => false}\n                        numberOfMonths={1}\n                        hideKeyboardShortcutsPanel\n                     />\n                  </div>\n               </div>\n            </CardHeader>\n            <CardBody className=\"graph_height\">\n               {this.props.DashboardReducer && this.props.DashboardReducer.userData && this.props.DashboardReducer.userData.length ?\n                  <Bar\n                     data={data}\n                     height={250}\n                     options={{\n                        responsive: true,\n                        maintainAspectRatio: false,\n                        layout: {\n                           padding: {\n                              left: 0,\n                              right: 0,\n                              top: 0,\n                              bottom: 0\n                           }\n                        },\n                        scales: {\n                           xAxes: [\n                              {\n                                 barThickness: 30,\n                                 minBarLength: 2,\n                                 ticks: {\n                                    fontSize: 15,\n                                    fontStyle: \"bold\",\n                                    interval: 7\n                                 },\n                              },\n                           ],\n                           yAxes: [{\n                              ticks: {\n                                 beginAtZero: true,\n                                 min: 0,\n                                 stepSize: 1,\n                                 fontStyle: \"bold\",\n                              },\n                              stacked: true,\n                           }],\n                        }\n                     }}\n                  />\n                  :\n                  <div className={\"text-center\"}>\n                     <NoDataFound message={\"Currently there are no registered users found between this dates.\"} />\n                  </div>\n               }\n               {isLoadingUser ? <Loader /> : null}\n            </CardBody>\n         </Card>\n      )\n   }\n}\nexport default withRouter(BarChart);","import React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { Card, CardBody, CardHeader } from \"reactstrap\";\nimport { Doughnut } from 'react-chartjs-2';\nimport moment from 'moment';\nimport 'react-dates/initialize';\nimport { DateRangePicker } from 'react-dates';\nimport '../../../node_modules/react-dates/lib/css/_datepicker.css';\nimport Loader from \"../../containers/Loader/Loader\";\nimport NoDataFound from \"../common/NoFound\"\n\nclass DoughnutChart extends Component {\n   constructor(props) {\n      super(props);\n      this.state = {\n         data: {},\n         startDate: moment().subtract(30, \"d\"),\n         endDate: moment(),\n         focusedInput: null,\n      };\n   }\n   componentDidMount() {\n      this.onDatesChangeRoleTypeUser();\n   };\n   componentDidUpdate({ DashboardReducer }) {\n      if (this.props.DashboardReducer && this.props.DashboardReducer !== DashboardReducer) {\n         if (this.props.DashboardReducer && this.props.DashboardReducer.userRoleTypeData && this.props.DashboardReducer.userRoleTypeData !== DashboardReducer.userRoleTypeData && this.props.DashboardReducer.userRoleTypeData.length) {\n            this.setState({\n               data: {\n                  labels: this.props.DashboardReducer.userRoleTypeData ? this.props.DashboardReducer.userRoleTypeData.map((data) => { return data.roleType}) : null,\n                  datasets: [{\n                     data: this.props.DashboardReducer.userRoleTypeData ? this.props.DashboardReducer.userRoleTypeData.map((data) => { return data.totalCount }) : null,\n                     backgroundColor: [\n                        '#000',\n                        '#2f353a',\n                        '#615b5b5f',\n                        '#415b5b54',\n                     ],\n                     hoverBackgroundColor: [\n                        '#000',\n                        '#2f353a',\n                        '#615b5b5f',\n                        '#415b5b54',\n                     ]\n                  }]\n               }\n            })\n         }\n      };\n   };\n   onDatesChangeRoleTypeUser = (e) => {\n      this.props.getRoleTypeUserNo({\n         startDate: this.state.startDate ?\n            new Date(this.state.startDate) : new Date(),\n         endDate: this.state.endDate ?\n            new Date(this.state.endDate) : new Date()\n      })\n   }\n   render() {\n      const { data } = this.state;\n      const { DashboardReducer } = this.props;\n      const { isLoadingUserRoleType } = DashboardReducer;\n      return (\n         <Card>\n            <CardHeader>\n               <div className={\"d-flex justify-content-between w-100\"}>\n                  <div className=\"mt-3 font-weight-bold\">\n                     User RoleType\n                  </div>\n                  <div >\n                     <DateRangePicker\n                        startDate={this.state.startDate} // momentPropTypes.momentObj or null,\n                        startDateId=\"your_unique_start_date_id1\" // PropTypes.string.isRequired,\n                        endDate={this.state.endDate} // momentPropTypes.momentObj or null,\n                        endDateId=\"your_unique_end_date_id1\" // PropTypes.string.isRequired,\n                        onDatesChange={({ startDate, endDate }) => this.setState({ startDate: startDate, endDate: endDate }, () => {\n                           this.onDatesChangeRoleTypeUser()\n                        })} // PropTypes.func.isRequired,\n                        focusedInput={this.state.focusedInput} // PropTypes.oneOf([START_DATE, END_DATE]) or null,\n                        onFocusChange={focusedInput => this.setState({ focusedInput: focusedInput })} // PropTypes.func.isRequired,\n                        isOutsideRange={() => false}\n                        //orientation=\"vertical\" \n                        //verticalHeight={360}\n                        numberOfMonths={1}\n                        hideKeyboardShortcutsPanel\n                     />\n                  </div>\n               </div>\n            </CardHeader>\n            <CardBody className=\"graph_height\">\n               {this.props.DashboardReducer && this.props.DashboardReducer.userRoleTypeData && this.props.DashboardReducer.userRoleTypeData.length ?\n                  <Doughnut\n                     data={data}\n                     height={250}\n                     options={{\n                        responsive: true,\n                        maintainAspectRatio: false\n                     }}\n                  />\n                  :\n                  <div className={\"text-center\"}>\n                     <NoDataFound message={\"Currently there are no users found between this dates.\"} />\n                  </div>\n               }\n               {isLoadingUserRoleType ? <Loader /> : null}\n            </CardBody>\n         </Card>\n      )\n   }\n}\nexport default withRouter(DoughnutChart);","import React, { Component } from \"react\";\nimport { Card, CardBody, Col, Row } from \"reactstrap\";\nimport { Helmet } from \"react-helmet\";\nimport { connect } from \"react-redux\";\nimport 'react-dates/initialize';\nimport {\n   registeredUserNoRequest,\n   getRoleTypeUserNoReq,\n   getUsersList,\n   getAllSetRequest,\n   getAllFolderRequest,\n} from \"../../actions\";\nimport UsersDetails from \"../../components/Dashboard/userDetails\";\nimport SetsDetails from \"../../components/Dashboard/setDetails\";\nimport FoldersDetails from \"../../components/Dashboard/folderDetails\";\nimport BarChart from \"../../components/Dashboard/barChart\";\nimport DoughnutChart from \"../../components/Dashboard/doughnutChart\";\n\nclass Dashboard extends Component {\n   componentDidMount() {\n      this.props.getUsersList({ page: 1, limit: 500 });\n      this.props.getAllSetRequest({ page: 1, limit: 500 });\n      this.props.getAllFolderRequest({ page: 1, limit: 500 });\n   };\n   onDatesChangeRoleTypeUser = (data) => {\n      this.props.getRoleTypeUserNoReq(data)\n   }\n   onDatesChange = (data) => {\n      this.props.registeredUserNo(data);\n   };\n   render() {\n      const { DashboardReducer, usersReducer, setsReducer, foldersReducer } = this.props;\n      return (\n         <div className=\"animated fadeIn\">\n            <Helmet>\n               <title>Superadmin/Dashboard</title>\n            </Helmet>\n            <Row>\n               <Col xs=\"12\" sm=\"12\" lg=\"12\" md=\"12\">\n                  <Card className={\"white-card card_align\"}>\n                     <CardBody className={\"custom-card-body position-relative\"}>\n                        <Row>\n                           <Col lg=\"4\">\n                              <UsersDetails\n                                 usersReducer={usersReducer}\n                              />\n                           </Col>\n                           <Col lg=\"4\">\n                              <SetsDetails\n                                 setsReducer={setsReducer}\n                              />\n                           </Col>\n                           <Col lg=\"4\">\n                              <FoldersDetails\n                                 foldersReducer={foldersReducer}\n                              />\n                           </Col>\n                        </Row>\n                        <Row>\n                           <Col lg=\"6\">\n                              <BarChart\n                                 DashboardReducer={DashboardReducer}\n                                 registeredUserNo={this.onDatesChange}\n                              />\n                           </Col>\n                           <Col lg=\"6\">\n                              <DoughnutChart\n                                 DashboardReducer={DashboardReducer}\n                                 getRoleTypeUserNo={this.onDatesChangeRoleTypeUser}\n                              />\n                           </Col>\n                        </Row>\n                     </CardBody>\n                  </Card>\n               </Col>\n            </Row>\n         </div>\n      );\n   }\n}\nconst mapStateToProps = state => ({\n   DashboardReducer: state.DashboardReducer,\n   usersReducer: state.usersReducer,\n   setsReducer: state.setsReducer,\n   foldersReducer: state.foldersReducer,\n});\nconst mapDispatchToProps = dispatch => ({\n   registeredUserNo: data => {\n      dispatch(registeredUserNoRequest(data));\n   },\n   getUsersList: data => {\n      dispatch(getUsersList(data));\n   },\n   getAllSetRequest: data => {\n      dispatch(getAllSetRequest(data));\n   },\n   getAllFolderRequest: data => {\n      dispatch(getAllFolderRequest(data));\n   },\n   getRoleTypeUserNoReq: data => {\n      dispatch(getRoleTypeUserNoReq(data));\n   }\n})\nexport default connect(\n   mapStateToProps,\n   mapDispatchToProps\n)(Dashboard);\n"],"sourceRoot":""}