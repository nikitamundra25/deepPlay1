{"version":3,"sources":["components/Dashboard/userDetails.js","components/Dashboard/setDetails.js","components/Dashboard/folderDetails.js","views/Dashboard/Dashboard.js"],"names":["UsersDetails","usersReducer","this","props","totalUsers","users","react_default","a","createElement","Card","CardHeader","className","CardBody","Table","responsive","borderless","width","style","maxWidth","Link","to","concat","AppRoutes","USERS","url","filter","user","status","length","isLoading","Loader","Component","withRouter","SetsDetails","setsReducer","totalSets","sets","SETS","set","FoldersDetails","foldersReducer","totalFolders","folders","FOLDERS","folder","Dashboard","onDatesChangeRoleTypeUser","data","_this","getRoleTypeUserNoReq","onDatesChange","registeredUserNo","getUsersList","page","limit","getAllSetRequest","getAllFolderRequest","_this$props","Helmet","Row","Col","xs","sm","lg","md","userDetails","setDetails","folderDetails","connect","state","DashboardReducer","dispatch","registeredUserNoRequest"],"mappings":"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","file":"static/js/16.acc0cb53.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { withRouter, Link } from \"react-router-dom\";\nimport { Card, CardBody, CardHeader, Table } from \"reactstrap\";\nimport Loader from \"../../containers/Loader/Loader\";\nimport { AppRoutes } from \"../../Config/AppRoutes\";\n\nclass UsersDetails extends Component {\n   render() {\n      const { usersReducer } = this.props;\n      const { totalUsers, users } = usersReducer;\n      return (\n         <Card >\n            <CardHeader>\n               <div className=\"font-weight-bold\">\n                  Users Details\n               </div>\n            </CardHeader>\n            <CardBody>\n               <Table responsive borderless>\n                  {usersReducer && users?\n                     <tbody>\n                        <tr>\n                           <td width=\"250px\">Total Active Users</td>\n                           <td style={{ maxWidth: \"200px\" }} className={\"font-weight-bold\"}>\n                              <span className=\"mr-2\">:</span>\n                              <Link to={`${AppRoutes.USERS.url}?page=1&status=1`}>\n                                 {users ? users.filter(user => user.status === true).length : 0}\n                              </Link>\n                           </td>\n                        </tr>\n                        <tr>\n                           <td width=\"250px\">Total Inactive Users</td>\n                           <td style={{ maxWidth: \"200px\" }} className={\"font-weight-bold\"}>\n                              <span className=\"mr-2\">:</span>\n                              <Link to={`${AppRoutes.USERS.url}?page=1&status=0`}>\n                                 {users ? users.filter(user => user.status === false).length : 0}\n                              </Link>\n                           </td>\n                        </tr>\n                        <tr>\n                           <td width=\"250px\">Total Users</td>\n                           <td style={{ maxWidth: \"200px\" }} className={\"font-weight-bold\"}>\n                              <span className=\"mr-2\">:</span>\n                              <Link to={`${AppRoutes.USERS.url}`}>\n                                 {totalUsers ? totalUsers : 0}\n                              </Link>\n                           </td>\n                        </tr>\n                     </tbody>\n                     : null}\n               </Table>\n               {usersReducer.isLoading ? <Loader /> : null}\n            </CardBody>\n         </Card>\n      )\n   }\n}\nexport default withRouter(UsersDetails);","import React, { Component } from \"react\";\nimport { withRouter, Link } from \"react-router-dom\";\nimport { Card, CardBody, CardHeader, Table } from \"reactstrap\";\nimport Loader from \"../../containers/Loader/Loader\";\nimport { AppRoutes } from \"../../Config/AppRoutes\";\n\nclass SetsDetails extends Component {\n   render() {\n      const { setsReducer } = this.props;\n      const { totalSets, sets } = setsReducer;\n      return (\n         <Card >\n            <CardHeader>\n               <div className=\"font-weight-bold\">\n                  Sets Details\n               </div>\n            </CardHeader>\n            <CardBody>\n               <Table responsive borderless>\n                  {setsReducer && sets ?\n                     <tbody>\n                        <tr>\n                           <td width=\"250px\">Total Active Sets</td>\n                           <td style={{ maxWidth: \"200px\" }} className={\"font-weight-bold\"}>\n                              <span className=\"mr-2\">:</span>\n                              <Link to={`${AppRoutes.SETS.url}?page=1&status=1`}>\n                                 {sets ? sets.filter(set => set.status === true).length : 0}\n                              </Link>\n                           </td>\n                        </tr>\n                        <tr>\n                           <td width=\"250px\">Total Inactive Sets</td>\n                           <td style={{ maxWidth: \"200px\" }} className={\"font-weight-bold\"}>\n                              <span className=\"mr-2\">:</span>\n                              <Link to={`${AppRoutes.SETS.url}?page=1&status=0`}>\n                                 {sets ? sets.filter(set => set.status === false).length : 0}\n                              </Link>\n                           </td>\n                        </tr>\n                        <tr>\n                           <td width=\"250px\">Total Sets</td>\n                           <td style={{ maxWidth: \"200px\" }} className={\"font-weight-bold\"}>\n                              <span className=\"mr-2\">:</span>\n                              <Link to={`${AppRoutes.SETS.url}`}>\n                                 {totalSets ? totalSets : 0}\n                              </Link>\n                           </td>\n                        </tr>\n                     </tbody>\n                     : null}\n               </Table>\n               {setsReducer.isLoading ? <Loader /> : null}\n            </CardBody>\n         </Card>\n      )\n   }\n}\nexport default withRouter(SetsDetails);","import React, { Component } from \"react\";\nimport { withRouter, Link } from \"react-router-dom\";\nimport { Card, CardBody, CardHeader, Table } from \"reactstrap\";\nimport Loader from \"../../containers/Loader/Loader\";\nimport { AppRoutes } from \"../../Config/AppRoutes\";\n\nclass FoldersDetails extends Component {\n   render() {\n      const { foldersReducer } = this.props;\n      const { totalFolders, folders } = foldersReducer;\n      return (\n         <Card >\n            <CardHeader>\n               <div className=\"font-weight-bold\">\n                  Folders Details\n               </div>\n            </CardHeader>\n            <CardBody>\n               <Table responsive borderless>\n                  {foldersReducer && folders ?\n                     <tbody>\n                        <tr>\n                           <td width=\"250px\">Total Active Folders</td>\n                           <td style={{ maxWidth: \"200px\" }} className={\"font-weight-bold\"}>\n                              <span className=\"mr-2\">:</span>\n                              <Link to={`${AppRoutes.FOLDERS.url}?page=1&status=1`}>\n                                 {folders ? folders.filter(folder => folder.status === true).length : 0}\n                              </Link>\n                           </td>\n                        </tr>\n                        <tr>\n                           <td width=\"250px\">Total Inactive Folders</td>\n                           <td style={{ maxWidth: \"200px\" }} className={\"font-weight-bold\"}>\n                              <span className=\"mr-2\">:</span>\n                              <Link to={`${AppRoutes.FOLDERS.url}?page=1&status=0`}>\n                                 {folders ? folders.filter(folder => folder.status === false).length : 0}\n                              </Link>\n                           </td>\n                        </tr>\n                        <tr>\n                           <td width=\"250px\">Total Folders</td>\n                           <td style={{ maxWidth: \"200px\" }} className={\"font-weight-bold\"}>\n                              <span className=\"mr-2\">:</span>\n                              <Link to={`${AppRoutes.FOLDERS.url}`}>\n                                 {totalFolders ? totalFolders : 0}\n                              </Link>\n                           </td>\n                        </tr>\n                     </tbody>\n                     : null}\n               </Table>\n               {foldersReducer.isLoading ? <Loader /> : null}\n            </CardBody>\n         </Card>\n      )\n   }\n}\nexport default withRouter(FoldersDetails);","import React, { Component } from \"react\";\nimport { Card, CardBody, Col, Row } from \"reactstrap\";\nimport { Helmet } from \"react-helmet\";\nimport { connect } from \"react-redux\";\nimport \"react-dates/initialize\";\nimport {\n  registeredUserNoRequest,\n  getRoleTypeUserNoReq,\n  getUsersList,\n  getAllSetRequest,\n  getAllFolderRequest,\n} from \"../../actions\";\nimport UsersDetails from \"../../components/Dashboard/userDetails\";\nimport SetsDetails from \"../../components/Dashboard/setDetails\";\nimport FoldersDetails from \"../../components/Dashboard/folderDetails\";\n// import BarChart from \"../../components/Dashboard/barChart\";\n// import DoughnutChart from \"../../components/Dashboard/doughnutChart\";\n\nclass Dashboard extends Component {\n  componentDidMount() {\n    this.props.getUsersList({ page: 1, limit: 500 });\n    this.props.getAllSetRequest({ page: 1, limit: 500 });\n    this.props.getAllFolderRequest({ page: 1, limit: 500 });\n  }\n  onDatesChangeRoleTypeUser = (data) => {\n    this.props.getRoleTypeUserNoReq(data);\n  };\n  onDatesChange = (data) => {\n    this.props.registeredUserNo(data);\n  };\n  render() {\n    const {\n      // DashboardReducer,\n      usersReducer,\n      setsReducer,\n      foldersReducer,\n    } = this.props;\n    return (\n      <div className='animated fadeIn'>\n        <Helmet>\n          <title>Superadmin/Dashboard</title>\n        </Helmet>\n        <Row>\n          <Col xs='12' sm='12' lg='12' md='12'>\n            <Card className={\"white-card card_align\"}>\n              <CardBody className={\"custom-card-body position-relative\"}>\n                <Row>\n                  <Col lg='4'>\n                    <UsersDetails usersReducer={usersReducer} />\n                  </Col>\n                  <Col lg='4'>\n                    <SetsDetails setsReducer={setsReducer} />\n                  </Col>\n                  <Col lg='4'>\n                    <FoldersDetails foldersReducer={foldersReducer} />\n                  </Col>\n                </Row>\n                {/* <Row>\n                           <Col lg=\"6\">\n                              <BarChart\n                                 DashboardReducer={DashboardReducer}\n                                 registeredUserNo={this.onDatesChange}\n                              />\n                           </Col>\n                           <Col lg=\"6\">\n                              <DoughnutChart\n                                 DashboardReducer={DashboardReducer}\n                                 getRoleTypeUserNo={this.onDatesChangeRoleTypeUser}\n                              />\n                           </Col>\n                        </Row> */}\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = (state) => ({\n  DashboardReducer: state.DashboardReducer,\n  usersReducer: state.usersReducer,\n  setsReducer: state.setsReducer,\n  foldersReducer: state.foldersReducer,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  registeredUserNo: (data) => {\n    dispatch(registeredUserNoRequest(data));\n  },\n  getUsersList: (data) => {\n    dispatch(getUsersList(data));\n  },\n  getAllSetRequest: (data) => {\n    dispatch(getAllSetRequest(data));\n  },\n  getAllFolderRequest: (data) => {\n    dispatch(getAllFolderRequest(data));\n  },\n  getRoleTypeUserNoReq: (data) => {\n    dispatch(getRoleTypeUserNoReq(data));\n  },\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(Dashboard);\n"],"sourceRoot":""}