{"version":3,"sources":["assets/img/icons/common/picture.svg","assets/img/icons/common/boy.svg","components/Settings/uploadImageModal.jsx","components/Settings/index.jsx","container/Settings/index.jsx"],"names":["module","exports","__webpack_require__","p","UploadImage","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onSelectFile","_ref","asyncToGenerator","regenerator_default","a","mark","_callee4","file","index","x","wrap","_context4","prev","next","length","size","ConfirmBox","text","title","showCancelButton","confirmButtonText","abrupt","map","_ref2","_callee3","data","i","picReader","scope","_context3","FileReader","assertThisInitialized","type","addEventListener","_ref3","_callee2","event","image","_context2","Image","src","target","result","onload","_callee","dataURL","imageData","_context","setState","stop","_x5","apply","arguments","readAsDataURL","_x3","_x4","_x","_x2","handleCancel","handleOpen","state","_this2","react_default","createElement","className","Modal","isOpen","modal","toggle","backdrop","ModalHeader","aria-label","data-dismiss","onClick","aria-hidden","ModalBody","alt","width","height","Fragment","require","es","onDrop","accept","multiple","_ref5","getRootProps","getInputProps","Button","color","ModalFooter","handleImage","Component","SettingComponent","onHandleEdit","isDisabled","handleChange","e","_e$target","name","value","defineProperty","roleType","onSaveData","_this$state","firstName","lastName","_Validator","Validator","SingupValidations","SingupValidationsMessaages","isValid","errors","handleData","isLoading","handleDelete","Swal","fire","confirmButtonColor","cancelButtonColor","then","onDelete","uploadImage","profileImage","imgError","prevProps","profileInfoReducer","_this$props$profileIn","profileImageThumb","_this$state2","console","log","outline","Form","Row","Col","md","FormGroup","Label","for","Input","id","placeholder","disabled","onChange","style","email","checked","htmlFor","uploadImageModal","Setting","componentDidMount","getProfile","updateProfile","onDeleteUserAccount","Settings","userData","uploadProfileImage","React","connect","profileInfo","profileThumbnail","dispatch","profileRequest","payload","updateProfileRequest","deleteUserAccountRequest","uploadImageRequest"],"mappings":"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","file":"static/js/7.1eb54994.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/picture.a5124fb3.svg\";","module.exports = __webpack_public_path__ + \"static/media/boy.efe01b90.svg\";","import React, { Component } from \"react\";\nimport { Button, Modal, ModalFooter, ModalHeader, ModalBody } from \"reactstrap\";\nimport Dropzone from \"react-dropzone\";\nimport { ConfirmBox } from \"helper/SweetAleart\";\n\nclass UploadImage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      imageData: \"\"\n    };\n  }\n  onSelectFile = async (file, index) => {\n    for (let x = 0; x < file.length; x++) {\n      if (file[x].size > 10000000) {\n        await ConfirmBox({\n          text: \"\",\n          title: \"Maximum allowed size for image is 10mb\",\n          showCancelButton: false,\n          confirmButtonText: \"Ok\"\n        });\n        return;\n      }\n    }\n    file.map(async (data, i) => {\n      let picReader = new FileReader();\n      let scope = this;\n      const type = data.type;\n      await picReader.addEventListener(\"load\", async event => {\n        var image = new Image();\n        image.src = event.target.result;\n        image.onload = async function() {\n          let dataURL = picReader.result;\n          let imageData = \"\";\n          imageData = dataURL;\n          scope.setState({\n            imageData\n          });\n        };\n      });\n      await picReader.readAsDataURL(data);\n    });\n  };\n  handleCancel = () => {\n    this.setState({\n      imageData: \"\"\n    });\n    this.props.handleOpen();\n  };\n  render() {\n    return (\n      <div className=\"modal-text-center\">\n        <Modal\n          className=\"modal-dialog-centered\"\n          size=\"lg\"\n          isOpen={this.props.modal}\n          toggle={this.props.handleOpen}\n          backdrop={\"static\"}\n        >\n          <ModalHeader>\n            <h4>Upload profile image</h4>\n\n            <button\n              aria-label=\"Close\"\n              className=\"close\"\n              data-dismiss=\"modal\"\n              type=\"button\"\n              onClick={this.props.handleOpen}\n            >\n              <span aria-hidden={true}>×</span>\n            </button>\n          </ModalHeader>\n          <ModalBody className=\"modal-text-center\">\n            {this.state.imageData ? (\n              <img\n                alt=\"...\"\n                src={this.state.imageData}\n                width=\"350px\"\n                height=\"250px\"\n              />\n            ) : (\n              <>\n                <img\n                  alt=\"...\"\n                  src={require(\"assets/img/icons/common/picture.svg\")}\n                  width=\"50px\"\n                  height=\"50px\"\n                />\n\n                <Dropzone\n                  onDrop={this.onSelectFile}\n                  accept=\"image/*\"\n                  multiple={true}\n                >\n                  {({ getRootProps, getInputProps }) => {\n                    return (\n                      <div {...getRootProps()}>\n                        <input {...getInputProps()} />\n                        <div className=\"add-more-img-wrap\">\n                          <div className=\"add-more-text\">\n                            <h3>Drag a profile photo here </h3>\n                            <br />\n                            <Button\n                              color=\"default\"\n                              type=\"button\"\n                              size=\"sm\"\n                              className=\"btn-btn-right\"\n                            >\n                              Select a photo from your computer\n                            </Button>\n                          </div>\n                        </div>\n                      </div>\n                    );\n                  }}\n                </Dropzone>\n              </>\n            )}\n          </ModalBody>\n          <ModalFooter>\n            <Button\n              color=\"primary\"\n              onClick={() => this.props.handleImage(this.state.imageData)}\n            >\n              Set profile picture\n            </Button>{\" \"}\n            <Button color=\"secondary\" onClick={this.handleCancel}>\n              Cancel\n            </Button>\n          </ModalFooter>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default UploadImage;\n","import React, { Component } from \"react\";\nimport {\n  Button,\n  FormGroup,\n  Form,\n  Input,\n  Label,\n  Row,\n  Col,\n  FormFeedback\n} from \"reactstrap\";\nimport Validator from \"js-object-validation\";\nimport Swal from \"sweetalert2\";\nimport {\n  SingupValidations,\n  SingupValidationsMessaages\n} from \"../../validations\";\nimport UploadImage from \"./uploadImageModal\";\n\nclass SettingComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isDisabled: true,\n      firstName: \"\",\n      lastName: \"\",\n      profileImage: \"\",\n      roleType: false,\n      imgError: \"\",\n      file: \"\",\n      modal: false,\n      errors: {}\n    };\n  }\n  componentDidUpdate(prevProps) {\n    if (prevProps.profileInfoReducer !== this.props.profileInfoReducer) {\n      const {\n        firstName,\n        lastName,\n        profileImage,\n        roleType\n      } = this.props.profileInfoReducer;\n      this.setState({\n        firstName,\n        lastName,\n        file: profileImage,\n        roleType\n      });\n    }\n    if (prevProps.profileImageThumb !== this.props.profileImageThumb) {\n      this.setState({\n        file: this.props.profileImageThumb,\n        modal: false\n      });\n    }\n  }\n  onHandleEdit = () => {\n    this.setState({\n      isDisabled: !this.state.isDisabled\n    });\n  };\n\n  handleChange = e => {\n    const { name, value } = e.target;\n    this.setState({\n      [name]: value\n    });\n    if (name === \"teacher\" || name === \"student\") {\n      this.setState({\n        roleType: name\n      });\n    } else {\n      this.setState({\n        roleType: \"unClassified\"\n      });\n    }\n  };\n\n  onSaveData = () => {\n    const { firstName, lastName, roleType } = this.state;\n    const data = {\n      firstName: firstName,\n      lastName: lastName,\n      roleType: roleType\n    };\n    let { isValid, errors } = Validator(\n      data,\n      SingupValidations,\n      SingupValidationsMessaages\n    );\n    if (!isValid) {\n      this.setState({\n        errors,\n        isLoading: false\n      });\n      return;\n    }\n    this.props.handleData(data);\n    this.setState({\n      isDisabled: !this.state.isDisabled\n    });\n  };\n\n  handleDelete = () => {\n    Swal.fire({\n      title: \"Are you sure?\",\n      text: \"You want to delete this account permanently!\",\n      type: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Yes, delete it!\"\n    }).then(result => {\n      if (result.value) {\n        this.props.onDelete();\n      }\n    });\n  };\n\n  handleOpen = () => {\n    this.setState({\n      modal: !this.state.modal\n    });\n  };\n\n  handleImage = data => {\n    this.props.uploadImage(data);\n  };\n\n  render() {\n    const { profileInfoReducer } = this.props;\n    const {\n      isDisabled,\n      firstName,\n      lastName,\n      roleType,\n      file,\n      errors,\n      imgError\n    } = this.state;\n    console.log(\"file\", this.state.file);\n    return (\n      <div className=\"col-md-12 col-sm-12\">\n        <h1>Settings</h1>\n        <div className=\"dashboard-right-profile\">\n          <h6>PROFILE </h6>\n          <Button\n            color=\"default\"\n            outline\n            type=\"button\"\n            size=\"sm\"\n            className=\"btn-btn-right\"\n            onClick={this.onHandleEdit}\n          >\n            Edit Profile\n          </Button>\n        </div>\n        <div className=\"user-profile\">\n          <div className=\"profileAvtar\">\n            {file ? (\n              <img alt=\"...\" src={this.state.file} />\n            ) : (\n              <img alt=\"...\" src={require(\"assets/img/icons/common/boy.svg\")} />\n            )}\n            {!isDisabled ? (\n              <span className=\"changeProfile\" onClick={this.handleOpen}>\n                Change Profile\n              </span>\n            ) : (\n              \"\"\n            )}\n          </div>\n          {imgError ? <div className=\"text-danger\"> {imgError} </div> : null}\n        </div>\n        <div className=\"settingForm\">\n          <Form>\n            <Row className={\"m-0\"}>\n              <Col md=\"6\">\n                <FormGroup>\n                  <Label for=\"firstName\">First Name</Label>\n                  <Input\n                    id=\"exampleFormControlInput1\"\n                    className=\"capitalize\"\n                    placeholder=\"firstName\"\n                    type=\"text\"\n                    name=\"firstName\"\n                    disabled={isDisabled}\n                    onChange={this.handleChange}\n                    value={firstName}\n                  />\n                  {errors.firstName && !firstName ? (\n                    <p style={{ color: \"red\" }}> {errors.firstName} </p>\n                  ) : null}\n                </FormGroup>\n              </Col>\n              <Col md=\"6\">\n                <FormGroup>\n                  <Label for=\"lastName\">Last Name</Label>\n                  <Input\n                    id=\"exampleFormControlInput1\"\n                    className=\"capitalize\"\n                    placeholder=\"lastName\"\n                    type=\"text\"\n                    name=\"lastName\"\n                    disabled={isDisabled}\n                    onChange={this.handleChange}\n                    value={lastName}\n                  />\n                  {errors.lastName && !lastName ? (\n                    <p style={{ color: \"red\" }}> {errors.lastName} </p>\n                  ) : null}\n                </FormGroup>\n              </Col>\n            </Row>\n            <Row>\n              <Col md=\"6\">\n                <FormGroup>\n                  <Label for=\"email\">Email</Label>\n                  <Input\n                    id=\"exampleFormControlInput1\"\n                    placeholder=\"name@example.com\"\n                    type=\"email\"\n                    value={profileInfoReducer ? profileInfoReducer.email : \"\"}\n                  />\n                </FormGroup>\n              </Col>\n            </Row>\n          </Form>\n        </div>\n        <div className=\"setting-account-type\">\n          <h6>ACCOUNT TYPE</h6>\n        </div>\n        <h4>\n          <b>Teacher or Student account </b>\n        </h4>\n        <div className=\"custom-control custom-radio mb-3 control\">\n          <input\n            className=\"custom-control-input\"\n            id=\"customRadio5\"\n            name=\"teacher\"\n            disabled={isDisabled}\n            onChange={this.handleChange}\n            checked={roleType === \"teacher\"}\n            type=\"radio\"\n          />\n          <label className=\"custom-control-label\" htmlFor=\"customRadio5\">\n            Teacher\n          </label>\n        </div>\n        <div className=\"custom-control custom-radio mb-3 control \">\n          <input\n            className=\"custom-control-input\"\n            id=\"customRadio6\"\n            name=\"student\"\n            disabled={isDisabled}\n            onChange={this.handleChange}\n            checked={roleType === \"student\"}\n            type=\"radio\"\n            value=\"\"\n          />\n          <label className=\"custom-control-label\" htmlFor=\"customRadio6\">\n            Student\n          </label>\n        </div>\n        <Button\n          color=\"default\"\n          type=\"button\"\n          className=\"btn-btn-save\"\n          onClick={this.onSaveData}\n        >\n          Save\n        </Button>\n        <div className=\"setting-account-type\">\n          <h6>DELETE ACCOUNT</h6>\n        </div>\n        <h4>\n          <b>Permanently delete this account </b>\n          <p>Be careful- this will delete your data and cannot be undone.</p>\n        </h4>\n        <Button\n          color=\"danger\"\n          type=\"button\"\n          className=\"btn-btn-save\"\n          onClick={this.handleDelete}\n        >\n          Delete Account\n        </Button>\n        <UploadImage\n          handleImage={this.handleImage}\n          handleOpen={this.handleOpen}\n          modal={this.state.modal}\n        />\n      </div>\n    );\n  }\n}\n\nexport default SettingComponent;\n","import React from \"react\";\nimport SettingComponent from \"../../components/Settings\";\nimport {\n  profileRequest,\n  updateProfileRequest,\n  deleteUserAccountRequest,\n  uploadImageRequest\n} from \"../../actions\";\nimport { connect } from \"react-redux\";\n// core components\nclass Setting extends React.Component {\n  componentDidMount = () => {\n    this.props.getProfile();\n  };\n\n  handleData = data => {\n    console.log(\"data\", data);\n    this.props.updateProfile(data);\n  };\n  onDelete = () => {\n    this.props.onDeleteUserAccount();\n  };\n  // uploadImage = file => {\n  //   console.log(\">>>>.\", file);\n  //   this.props.uploadProfileImage(file);\n  // };\n  render() {\n    return (\n      <>\n        <SettingComponent\n          profileInfoReducer={this.props.userData}\n          handleData={this.handleData}\n          onDelete={this.onDelete}\n          profileImageThumb= {this.props.profileImage}\n          uploadImage={file =>\n            this.props.uploadProfileImage({ imageData: file })\n          }\n        />\n      </>\n    );\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    userData: state.profileInfoReducer.profileInfo,\n    profileImage: state.profileImage.profileImage.profileThumbnail\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getProfile: () => {\n      dispatch(profileRequest());\n    },\n    updateProfile: payload => {\n      dispatch(updateProfileRequest(payload));\n    },\n    onDeleteUserAccount: () => {\n      dispatch(deleteUserAccountRequest());\n    },\n    uploadProfileImage: payload => {\n      dispatch(uploadImageRequest(payload));\n    }\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Setting);\n"],"sourceRoot":""}